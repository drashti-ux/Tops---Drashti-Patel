Q3.Understanding JVM, JRE, and JDK
Ans:
    1.JVM (Java Virtual Machine)
    The Java Virtual Machine (JVM) is a platform-specific virtual machine that runs Java bytecode. It acts as a runtime environment for Java applications, translating Java bytecode into machine code specific to the host system.
    Role: The JVM enables Java’s “write once, run anywhere” (WORA) capability, as it abstracts the underlying hardware and operating system.

    2.JRE (Java Runtime Environment)
    The Java Runtime Environment (JRE) is a software package that provides everything needed to run Java applications. It includes the JVM along with libraries and other components necessary for Java application execution.
    Components of the JRE:
    JVM: The core component of the JRE, responsible for executing bytecode.
    Core Libraries: Standard Java libraries that provide essential utilities for tasks like file I/O, networking, data structures, etc.
    Supporting Files: Other files and resources that support the JVM and core libraries.
    Role: The JRE allows you to run compiled Java applications, but it doesn’t include tools for compiling Java code. So, if you only need to run Java applications, the JRE is sufficient.

    3.JDK (Java Development Kit)
    The Java Development Kit (JDK) is a full development environment for building Java applications. It includes everything in the JRE, plus additional tools required for Java development.
    Components of the JDK:
    JRE: The JDK contains a complete JRE, including the JVM and all necessary libraries.
    Development Tools: Key tools like the Java compiler (javac), debugger (jdb), and other utilities for writing, compiling, and debugging Java code.
    Additional Libraries: Libraries specifically for development, such as the Java Native Interface (JNI) and tools for creating and managing Java archives (JAR files).
    Role: The JDK is essential for anyone writing Java code, as it includes both the tools to develop applications and the environment to run them.

    How They Work Together
    Writing Code: You write Java source code (.java files).
    Compiling: The JDK compiles this code into bytecode (.class files) using the javac compiler.
    Running: The JVM interprets or compiles this bytecode into machine code to run it on the platform, using the libraries in the JRE.

            +------------------------+
            |          JDK           |
            |                        |
            |   Development Tools    |
            |  (Compiler, Javadoc,   |
            |    Debugger, etc.)     |
            |                        |
            |            +           |
            |                        |
            |      +-------------+   |
            |      |    JRE      |   |
            |      |-------------|   |
            |      |    Core     |   |
            |      |  Libraries  |   |
            |      |   (API)     |   |
            |      |             |   |
            |      |      +      |   |
            |      |             |   |
            |      | +---------+ |   |
            |      | |  JVM    | |   |
            |      | |---------| |   |
            |      | |Executes | |   |
            |      | |Java Byte| |   |
            |      | |Code     | |   |
            |      | +---------+ |   |
            |      +-------------+   |
            |                        |
            +------------------------+